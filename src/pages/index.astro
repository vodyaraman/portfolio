---
import Intro from "../sections/intro/Intro.astro";
import Layout from "../layouts/Layout.astro";
import "@/sections/intro/Intro.scss";
import "@/sections/profile/Profile.scss";
import "@/sections/3d-modelling/3d.scss";
import "@/sections/exp/Exp.scss"
import Profile from "@/sections/profile/Profile.astro";
import Exp from "@/sections/exp/Exp.astro";
---

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import Lenis from "@studio-freight/lenis";

	gsap.registerPlugin(ScrollTrigger);

	// Вместо const lenis = new Lenis() делаем так:
	window.__lenis = new Lenis();
	const lenis = window.__lenis;

	lenis.on("scroll", () => {
		ScrollTrigger.update();
	});

	gsap.ticker.add((time) => {
		lenis.raf(time * 1000);
	});
	gsap.ticker.lagSmoothing(0);

	// Селектор для контейнера со скроллом:
	const landingEl = document.querySelector(".landing") as HTMLElement | null;

	// Настраиваем scrollerProxy
	ScrollTrigger.scrollerProxy(".landing", {
		scrollTop(value) {
			return arguments.length
				? lenis.scrollTo(Number(value), { immediate: true })
				: lenis.scroll;
		},
		getBoundingClientRect() {
			return {
				top: 0,
				left: 0,
				width: window.innerWidth,
				height: window.innerHeight,
			};
		},
		// Проверяем, есть ли transform на элементе:
		pinType: landingEl?.style?.transform ? "transform" : "fixed",
	});

	gsap.to(".intro", {
		yPercent: 30,
		scrollTrigger: {
			trigger: ".intro",
			start: "top top",
			end: "120% top",
			scrub: true,
			scroller: ".landing",
		},
	});
	
</script>

<Layout>
	<main class="landing">
		<Intro />
		<Profile/>
		<Exp/>
	</main>
</Layout>
